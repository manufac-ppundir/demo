name: Backend CI/CD Workflow

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Build Docker Image
      env:
        PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
      run: |
        docker build -t finstat-api:latest ./api
        docker save -o ./finstat-api.tar finstat-api:latest
        echo "$PRIVATE_KEY" > github-ec2.pem
        chmod 600 github-ec2.pem
        scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i github-ec2.pem finstat-api.tar ${USER}@${HOST}:/home/ec2-user/
    
    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
      run: |
        echo "$PRIVATE_KEY" > github-ec2.pem
        chmod 600 github-ec2.pem
        ssh -o StrictHostKeyChecking=no -i github-ec2.pem ${USER}@${HOST} '
        # Remove old backup image if exists
        docker rmi finstat-api:backup || true

        # Promote current latest to backup
        docker tag finstat-api:latest finstat-api:backup || true

        # Remove old backup container if exists
        docker rm -f finstat-api-backup || true

        # Promote current container to backup
        docker stop finstat-api-latest || true
        docker rename finstat-api-latest finstat-api-backup || true

        # Load new image as latest
        docker load -i /home/ec2-user/finstat-api.tar
      
        # Start new container from loaded image
        docker run -d --name finstat-api-latest -p 1025:8000 finstat-api:latest

        # # Backup current image
        # docker tag finstat-api:latest finstat-api:backup || true
        
        docker ps -a
        '
